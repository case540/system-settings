= GoPokedex =
== Today ==
* Change how pokemon moves where checked (version group)

== Features ==

* Website:
    * Database of pokemons, reports, users
        * Pokemon:
            * [X] <s>pokemon_id: 1-151</s>
            * [ ] small icon
            * [ ] big icon
            * [X] <s>name</s>
            * [X] <s>evolution: repeated </s>
            * [X] <s>location</s>
            * [X] <s>seen_it_count:</s>
            * [X] <s>want_it_count:</s>
            * [X] <s>have_it_count:</s>
            * [ ] type
            * [ ] total_report_count:
            * [ ] moves            
        * [ ] User: #doesn't seem to need impolementation
            * [ ] id
            * [ ] location list
            * [ ] seen_list
            * [ ] want_list
            * [ ] have_list
        * Report:
            * time
            * location
            * pokemon: id
            * user: user_id
            * by_legit_user: 
            * failed_to_catch: bool
            * caught: bool
    * Survey on catch/seen/want
    * Form to change content
    * heat map for pokemon seen
* [o] MVP:
    * [X] <s>api to show the database</s>
    * [ ] form to add stuff into it
    * [X] <s>display these pokemons in the simpliest format</s>
* [ ] MVP 2:
    * [ ] UI

== Step ==
* [ ] Look into how pokedex does it
    * [ ] Learn a bit about PWA --> later
        * [ ] goal -> finish PWA tutorial --> later

* MVP site
    * [X] <s>Write database in ndb</s>
        * [X] <s>get api right</s>
        * [X] <s>get a json file from pokemon api</s>
    * [O] Import data in a form and deserialize
        * [X] <s>a simple one</s>
        * [X] <s>try to use object hook to get specific object type</s>
        * [ ] encoder for location, image etc <--- later
        * [X] <s>use Key object to link class together, maybe would help when it comes to deserialize</s>
    * [o] Add a couple of pokemons
        * [X] <s>list out the pokemons</s>
        * [X] <s>local json auto import</s>
   * [.] feed back system 1
        * [X] <s>initiate reports</s>
    * [o] Page display: front end part 1
        * [X] <s>basic wireframe layout on papar</s>
        * [X] <s>url design</s>
        * [ ] ajax report and CXRF attack prevention <- later
        * [X] <s>write a basic landing page with pkm list out and modal</s>
            * [X] <s>list out the pkm with images in plain html</s>
            * [X] <s>foundationize it</s>
            * [X] <s>add model</s>
            * [X] <s>add detail view</s>
            * [X] <s>fill information in model and detailed view</s>
            * [X] <s>evolution chain (simple version)</s>
        * [ ] Try other python web frame work (why is loading so slow?) <- later
            * [ ] Try migrate framework to python3
            * [ ] Try aiocio
            * [ ] Try bottle
            * [ ] Try turnato
            * [ ] (stretch) how to do speed test for ndb queries
            * [ ] (stretch) image load issue
    * [o] model modification <- 08/17
        * [O] Pokemon
            * [X] <s>add location</s>
            * [X] <s>add rare score</s>
            * [ ] rare score based on locaiton -> query based
            * [X] <s>want count</s>
            * [X] <s>have count</s>
        * [X] <s>Trainer</s>
            * [X] <s>ign</s>
            * [X] <s>city</s>
            * [X] <s>team</s>
        * [o] Report finish the Geopoint import and to_dict <-- 08/17
            * [X] <s>basic</s>
            * [ ] create some fake data to import them to reports and user
            * [ ] mildly look into how to use Gmap's api
    * [ ] Front end part 2 <-- 08-25
        * [ ] sign up page <-- 08-22
            * [ ] login through google or facebook or email
                * [ ] http://www.vertabelo.com/blog/technical-articles/how-to-store-authentication-data-in-a-database-part-4-implementing-the-login-with-facebook-button-in-python
                * [ ] https://github.com/Vertabelo/flask-oauth-demo-app
                * [ ] https://github.com/Vertabelo/flask-oauth-demo-app
        * [ ] want button and have button <-- 08-23
        * [ ] report page <-- 08-23
            * [ ] I have seen
        * [ ] nav+top+search <-- 08-24
        * [ ] continuos loading <-- 08-25
        * [ ] image lazy load <-- 08-25
        * [ ] iframe lazy load for models <-- 08-25
            * [ ] image loading: https://www.google.com/search?espv=2&q=image+loader+for+web&oq=image+loader+for+web
        * [ ] glass effect around https://css-tricks.com/frosting-glass-css-filters/ 
        * [ ] scroll reveal: https://github.com/jlmakes/scrollreveal.js
        * [ ] d3 graph for the pokemon evolution chart with conditioning for eevee
    * [ ] feed back system 2
        * [ ] Submit changes dynamically
        * [ ] Do not allow anon vote
    * [ ] Random
        * [ ] Change pokemon evolves_into into evolves into keys
        * [ ] what if pokemon reference to a key/id of a Type that doesn't exist?
     * [ ] candy calculator + personal profile <-- 08-26
     * [ ] UI fancy logo design <--08-26
     * [ ] Launch
        * [ ] Domain registration
        * [ ] budget set
    * [ ] Aftermath learning:
        * [ ] look into marshmallow library
        * [ ] read about the definitive guide on user web authentication: http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication/477578#477578
* Version 2:
    * redesign the api/serializing layer
    * evolution chain object
    * leader board
        * ideas
            * image recognition on local device and send the validated results to server
    * improve on database
    * how to update data
    * refactor code:
        * parameterize the object_hook and to_dict function with wrapper
    * UI: polymer:
        * links: 
            * https://www.polymer-project.org/1.0/start/ 
            * https://css-tricks.com/modular-future-web-components/
            * http://www.binpress.com/blog/2014/06/26/polymer-vs-angular/
            * http://stackoverflow.com/questions/18089075/what-is-the-difference-between-polymer-elements-and-angularjs-directives
    * Data serialization refactor to be normal explicit
* Fixes:
    * get_by_id(0)
    * pdb variables once appear, the other time doesn't
    * solve the evolution chain problem
* Art:
    * hack the database
    * create logo
    * create pokemon images
== Ideas ==
* create google live case like site to create cool looking pokemon go background

== Things I need to understand ==
* Data import:
    * how to update data
    * how to create one entity while creating another (type of) entity. (e.g. create a move while create a pokemon)
* Testing:
    * how to run tests for these functions
    * https://cloud.google.com/appengine/docs/python/tools/localunittesting 
* who group key works for ndb (greetingbook example)
* hidden API call (prevent CRFS)
* how to prevent people abusing form submission

* look into the examples from GAE examples: getting-started-python-master
    * example questions: (what is tox, how does it utilize ndb, why doesn't it?)
    * why in app.yaml: vm? why use gunicorn? ad59a
* Understand how pokedex works
* Question:
    * why doesn't repeated and required allowed togeter in ndb.Property?
* Make the import script parallel
* Understand ajax call: http://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call

== Things I learned ==
* start with wireframe and brain storm design
