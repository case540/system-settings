= StockHawk =

= Steps =
* [.] Each stock quote on the main screen is clickable and leads to a new screen which graphs the stock's value over time.
    * [X] <s>Design detailed activity (Show graph overtime)</s>
    * [.] Create detailed activity
        * [X] fix the bug (insert twice)
        * [ ] Check the stetho db (20 min)
        * [ ] Change the database to one recording of stock symbol
        * [ ] Create new Database table for histogram
        * [ ] Fetch data for past record
        * [ ] Add past record to db
        * [ ] Show db
    * [ ] Bugs
        * [ ] auto capitalize all the input 
    * [ ] Better perf
        * [ ] GmsTaskService, run on background thread
    * [ ] Better error handling
        * [ ] First time loading
* does not crash when a user searches for a non-existent stock.
* Stocks can be displayed in a collection widget.
* app has content descriptions for all buttons.
* app supports layout mirroring using both the RTL attribute and the start/end tags.
* Strings are all included in the strings.xml file and untranslatable strings have a translatable tag marked to false




= Requirements =
* Each stock quote on the main screen is clickable and leads to a new screen which graphs the stock's value over time.
* does not crash when a user searches for a non-existent stock.
* Stocks can be displayed in a collection widget.
* app has content descriptions for all buttons.
* app supports layout mirroring using both the RTL attribute and the start/end tags.
* Strings are all included in the strings.xml file and untranslatable strings have a translatable tag marked to false


== Find out later ==
* https://github.com/SimonVT/schematic What is pathSegment
* Look into sqlite3 details 
    * https://www.sqlite.org/foreignkeys.html 
    * https://www.sqlite.org/cli.html 
    * https://www.sqlite.org/docs.html
* Look into using quandl https://www.quandl.com/docs/api#metadata
